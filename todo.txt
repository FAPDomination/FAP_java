  COMMENT THAT SHIT YOU FILTHY BASTUD
  Tidy the methods lists
  What happens to the getI, getJ, etc... ?
  Bugs :
	- Type of blocking tiles all to 0 ?
  Not so good :
V 	- Player l183 : big repaint
O		- Get a lighter repaint
X		- Get it inside the walkable block
V 	- TheThread : static count
	- Graph guimg public
? Displacement Hexa
V	- Hexa
V	- Bug changing
?	- Toggle handleKeys with thread and not keypress ?
V Same time displacements
? Get rid of colors
V Collisions
  Cleaner define of keys in params
  Tile on Path method
? Special Tiles
V	- The Floor is Lava
V	- Healthy Healthy
V		- Higher maxHP
V		- quicker recovery
V	- Frozen
V		- Implement
V		- Booster Imuned
  Complete shiftStick
	- Switch on type
?		- move to Cell.activateTile ?
V		- Warp
		- Switch
P		- NPC exit
V	- TrapCells
T		- Blast method
T		- Trap system
V	- Rewrite properly with objects, you flashy
V refreshHealthPoints
V stickActivateTile
P Depth
V Kick back player with countdown cell
T TeamPlay
T	- Implement teams
T	- TrapCells
~	- Warning : the first player sets ALL the params
O	- Cleaner initTeams
V		- Cleaner
O		- Teams 0,1,3 but not 2 : exception
  Player init :
V	- Cleaner init for position
V	- Random startCell
V	- Init skills
	- Init Keys
		- Init Keys
		- Not if FSM
V	- get the list of who is playing
V	- Bug with skillTime (set to 5s)
V	- Ori
V		- Init ori
V		- Modify when displacement
V		- Set "ori" to int
V	- Color
V		- Param list
V		- get
V		- 8
~		- Yellow
V CMap :
X	- MaxI & MaxJ
V	- Countneighbour with surroundingCell
V XML
V	- Understand XML
V	- Parse a Map
V		- Cells
V		- Parse DMap
V		- Parse type
V		- Players
V			- For with a regex to get all stX
V	- Parse the paramTable
V		- Generic
V		- specParam
V	- English translation
V Skills
V	- Create objects
V	- Function getSkill
V		- Knight
V		- Miner
V			- Cell
V				- Special params
~				- Special paintComponent
V			- Miner
V				- Special Param
V				- Pick random Cells
V				- Select one
V					- Override keyHigh
V					- handle keyPressing
~					- Cursor
~						- PaintComponent
V				- Teleport
T				- SkillTime odd ?
V		- Warlock
PT?~		- Archer
PT?~			- Arrow
V				- Class File
P				- PaintComponent
P					- Offsets
~					- Paint
P					- Change direction f(ori)
~				- Attributes
V				- Compute new position
T?~				- Acting
T					- Displacement
T						- Angle
?						- Tile on path ?
T						- Speed and compute cell bug
V					- Compute Cell
V					- Effect on it
~						- Destroy function
V						- Dissapear if blocked
V						- Disapear if out of bounds
V						- Dammage the cell
~						- COnstant archerDammage
V						- Hits ennemy
V							-Disapear
V							- Make him wait
~				- Clear Calculus
?				- Matrix Bug
V			- Implement into class
V		- Vampire
V		- NC
V		- Magician
V			- Detecting players
V			- Modifying params
V		- Booster
V	- Being blocked on the tile after throwing skill
O Modifying params
V	- Timer
V	- Implement all params
O	- Pointer to escape the double switch
O	- Way to pass param to the timer
  Add animation
	- Skills
	- Warps
	- Traps
	- Miner Warp
P Design
P	- Change did of countdown cell after end of timer
  Game
	- Get Params
V		- whoIsPlaying && skills
V		- wichTeam
V		- randStart
V		- isFSM
		- Keys
		- Victory conditions
	- Pause/Play
		- Get Key from param
		- Execute Pause
V			- Pause
			- Display
		- Resume
V			- without countdown
			- With countdown
	- Victory
V		- Check victory
		- Double timeout bug
V		- endGame method
		- Display it
			- General
			- tie
			- player win
P			- player lost (adventure)
  AI
	- Object
V		- Class File
~		- Attributes
E		- Complete the state-transition table
		- States
P			- Picking
V				- Pick random cell as test
V				- Real  state
			- Shifting
V				- Engage displacement
				- Count if the tile is blocked (timeout or "try"out)
				- if try out while pathFollowing, recalculate
P~T			- Analysing
V				- Analyse cell
V				- Analyse Area
V					- Get Weight
V					- Toggle escape
P					- Get it lighter with a parent/current thing
V				- Find good Cell
V					- Find Player Cell (ersatz)
V					- use method
V					- toggle escape
V				- Escape to pathFinding
V			- waiting
V				- System
V				- reactionTime
V			- DefinePath
V				- Cell as param
V				- Pathfinding
~S				- Emergency (no conquering) toggle
V					- Trigger
V					- Execute
V			- Follow Path
V				- read list
V				- wait for being on list's next cell
V		- getWeight
V			- General weights
V			- change ennemy f(score)
T			- warp weight
V				- parse destination cell
V				- compute zone weight
V				- Set it as warp weight
			- Switch weight
T		- findGoodCell
V			- General system
T			- Available cell (not on island)
V		- areaWeight
V			- Param Ring
V			- compute and return
	- Skills (detect if worth)
V		- General
V		- Knight
~		- Miner
V		- Warlock
		- Archer
V		- Vampire
V		- NC
V		- Magician
V		- Booster
T~	- Levels
T		- Ideas of what should depend on level
T			- nRings in areaWeight
T			- Weight toggle for changing area
T			- ReactionTime
T			- Miner Time after Skill
T			- All skill triggers
T			- number of tries in findGoodCell
T			- Trigger for direct pathfinding or conquest
V		- Init when creating FSM object
V PathFinding
V	- Classes files
V	- Convert flash => Java
V		- Node
V		- Pathfinder
V	- Test
V	- Make all static and getable
V ScoreBar
V	- Get nCells
V	- Update scores
V	- Get scores
V	- Draw Bar
V	- Display skillTime

---------------------------- GUI

  MainMenu
	- Buttons
		- adv
V		- vs
PT		- quick
V			- Loading screen
V			- pick map
V			- rand pc
V			- rand pc fsm
V			- teams & stuff
V			- init
T			- launch
V				- Bug no displacement
P			- Keep list of maps updated
V		- options
P		- credits
?		- quit
V			- Quit
?			- Dialog ?
V	- Design
V		- Implement images
V			- Sword
V			- clouds
X		- Ground manage
X		- Ground lag
X		- Delete ground displacement ?
V		- Sliding effect
V			- Go
V			- Back
~		- Gradient BG
V		- Bug with the repaint
  Go back buttons EEEEEEEEEEEEE
	- Find a place for it and keep it
?	- Even for OptionMenu ?
T	- Versus : keep information from one another
  Go next button : find place and keep it
? Game extends FAPanel ?
  OptionMenu
	- Buttons
V		- Back
		- Controls
		- Sound
		- FullScreen
P Init panels with a previous panel instead of always creating a new one
V	- OptionMenu
P	- Game
V	- LoadingScreen
  LoadingScreen
V	- Launch
	- Display game datas
  General Design
	- Button for menu
	- Button for other
	- Button remove
	- Btn add
  PlayerSelection
	- PlayerSelect
V		- Button remove
V			- Implement
V			- Dirty id finding
			- Exception OutOfBounds -1
X		- paintCompo
V		- ComboBoxes
V			- Control (Player 1,2,3, AI)
V			- Team
		- Placements with attributes
V	- Button add
	- Btn next
V		- Parse the player selecters
V			- isFSM
V			- Nothing more, passing to next panel
		- Security on number and order of teams
V		- Go to next panel
  CharacterSelection
	- Get previous information
	- Set character
  Right Click Menu
